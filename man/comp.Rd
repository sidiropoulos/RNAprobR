% Generated by roxygen2 (4.0.2): do not edit by hand
\name{comp}
\alias{comp}
\title{Function to arrange information from GRanges produced by readsamples() on
per position basis.}
\usage{
comp(euc_GR, cutoff = 1, fasta_file)
}
\arguments{
\item{euc_GR}{GRanges generated by readsamples() function}

\item{cutoff}{specifies cutoff length, only inserts of this length or longer
will be used for processing (default: 1)}

\item{fasta_file}{path to fasta file to which reads were mapped. Used to
report nucleotide at each position (not required)}
}
\value{
GRanges object with: 1) seqnames (RNAid), 2) start (position within
RNA), and metadata: 3) TCR (termination coverage ratio), 4) TC (termination
count), 5) Cover (coverage) and 6) PC (priming count) for each position
within each RNA.
}
\description{
Function comp() takes as input EUC_GR produced by readsamples() and produces
Comp_GR GRanges.
}
\details{
%% ~~ If necessary, more details than the description above ~~
}
\note{
%% ~~further notes~~
}
\examples{
dummy_euc_GR <- GRanges(seqnames="DummyRNA", IRanges(start=round(runif(100)*100), width=round(runif(100)*100+1)), strand="+", EUC=round(runif(100)*100))
comp(dummy_euc_GR)


## The function is currently defined as
function (euc_GR, cutoff = 1, fasta_file)
{
    if (cutoff < 1) {
        print("Cutoff must be >= 1")
        stop()
    }
    if (missing(fasta_file)) {
        print("Fasta file not specified.")
        fasta_exists <- F
    }
    else {
        if (file.exists(fasta_file)) {
            indexFa(fasta_file)
            fasta_ref <- FaFile(fasta_file)
            fasta_exists <- T
        }
        else {
            print("Warning: Fasta file not found.")
            fasta_exists <- F
        }
    }
    process_oneRNA_euc <- function(oneRNA_euc) {
        RNAid <- as.character(seqnames(oneRNA_euc[1]))
        RNA_order <- which(names(TC_all) == RNAid)
        if (length(RNA_order) > 1) {
            stop(paste("ERROR: More than one gene with the same ID provided. Check",
                RNAid))
        }
        gene_TC <- as.numeric(TC_all[[RNA_order]])
        TC_oneRNA <- data.frame(Pos = 1:length(gene_TC), gene_TC)
        gene_PC <- as.numeric(PC_all[[RNA_order]])
        PC_oneRNA <- data.frame(Pos = 1:length(gene_PC), gene_PC)
        gene_coverage <- as.numeric(cover_all[[RNA_order]])
        Cover_oneRNA <- data.frame(Pos = 1:length(gene_coverage),
            gene_coverage)
        merged_oneRNA <- merge(TC_oneRNA, PC_oneRNA, by = "Pos",
            all = T)
        merged_oneRNA <- merge(merged_oneRNA, Cover_oneRNA, by = "Pos",
            all = T)
        merged_oneRNA$TCR <- merged_oneRNA$gene_TC/merged_oneRNA$gene_coverage
        GR_oneRNA <- GRanges(seqnames = RNAid, IRanges(start = merged_oneRNA$Pos,
            width = 1), strand = "+", TC = merged_oneRNA$gene_TC,
            TCR = merged_oneRNA$TCR, Cover = merged_oneRNA$gene_coverage,
            PC = merged_oneRNA$gene_PC)
        GR_oneRNA
    }
    good_length <- (width(euc_GR) >= cutoff)
    removed_GR <- euc_GR[!good_length]
    euc_GR_good <- euc_GR[good_length]
    euc_forCoverage <- euc_GR_good
    end(euc_forCoverage) <- end(euc_forCoverage) - cutoff + 1
    cover_all <- coverage(euc_forCoverage, weight = euc_forCoverage$EUC)
    euc_forTC <- euc_GR_good
    end(euc_forTC) <- start(euc_forTC)
    TC_all <- coverage(euc_forTC, weight = euc_forTC$EUC)
    euc_forPC <- euc_GR_good
    start(euc_forPC) <- end(euc_forPC)
    PC_all <- coverage(euc_forPC, weight = euc_forPC$EUC)
    euc_by_RNA <- split(euc_GR_good, f = seqnames(euc_GR_good),
        drop = T)
    Comp_GR <- unlist(suppressWarnings(endoapply(euc_by_RNA,
        FUN = process_oneRNA_euc)))
    if (fasta_exists) {
        Comp_GR$nt <- as.character(getSeq(fasta_ref, Comp_GR),
            use.names = F)
    }
    else {
        Comp_GR$nt <- NA
    }
    percent_removed <- sum(removed_GR$EUC)/(sum(removed_GR$EUC) +
        sum(euc_GR_good$EUC)) * 100
    print(paste(round(percent_removed, 2), "\% of EUCs removed due to cutoff"))
    Comp_GR
  }
}
\author{
Lukasz Jan Kielpinski
}
\references{
Kielpinski, L.J., and Vinther, J. (2014). Massive
parallel-sequencing-based hydroxyl radical probing of RNA accessibility.
Nucleic Acids Res.
}
\seealso{
%% ~~objects to See Also as \code{\link{help}}, ~~~
}
\keyword{~kwd1}
\keyword{~kwd2}

